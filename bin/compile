#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

JQ="/usr/bin/jq"
if ! test -f "$JQ"; then
  curl -Ls https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 > "/usr/bin/jq" \
      && chmod +x "/usr/bin/jq"
fi

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

if [ ! -f "${ENV_DIR}/APP_BASE" ]; then
    echo "APP_BASE was not set. Aborting"
    exit 1
fi
APP_BASE="$(cat "${ENV_DIR}/APP_BASE")"
APP_DIR="$BUILD_DIR/$APP_BASE"

copy() {
  if [[ -f "$1" ]]; then 
    echo "Copying $1 to $BUILD_DIR" | indent
    cp "$1" "$BUILD_DIR/"
  fi
}

copy "$APP_DIR/requirements.txt"
copy "$APP_DIR/package.json"
copy "$APP_DIR/package-lock.json"
copy "$APP_DIR/yarn.lock"
copy "$APP_DIR/Gemfile"
copy "$APP_DIR/Gemfile.lock"
copy "$APP_DIR/app.json"
copy "$APP_DIR/Procfile"


# Special merging 
if [[ -f "$APP_DIR/package.json.heroku" ]]; then
  # merge `package.json.heroku` on top of `package.json`
  # i.e. we want to override the scripts section, not the dependencies, etc
  echo jq -s '.[0] * .[1]' "$APP_DIR/package.json" "$APP_DIR/package.json.heroku" 
  jq -s '.[0] * .[1]' "$APP_DIR/package.json" "$APP_DIR/package.json.heroku" > "$BUILD_DIR/package.json"
fi